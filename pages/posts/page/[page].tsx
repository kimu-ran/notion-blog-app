import Head from 'next/head';
import {getPostsByPage, getNumberOfPages, getAllTags} from '../../../lib/notionAPI';
import SinglePost from '../../../components/Post/SinglePost';
import { GetStaticPaths, GetStaticProps } from 'next';
import Pagination from '../../../components/Pagination/Pagination';
import Tag from '../../../components/Tag/Tag';

export const getStaticPaths: GetStaticPaths = async () => {
	const numberOfPages = await getNumberOfPages();
	let params = [];
	for (let i = 1; i <= numberOfPages; i++){
		params.push({ params: {page: i.toString()}});
	}

	return {
		paths: params,
		fallback: "blocking",
	};
};

export const getStaticProps: GetStaticProps = async (context) => {
	const numberOfPage = await getNumberOfPages();
	const currentPage = context.params?.page;
  const allTags = await getAllTags();
  const postsByPage = await getPostsByPage(
		parseInt(currentPage.toString(), 10)
	);
  return {
    props: {
      postsByPage,
			numberOfPage,
			allTags,
    },
    revalidate: 60 * 60,
  };
};

const BlogPageList =({ postsByPage, numberOfPage, allTags }) => {
  return (
    <div className='container h-full w-full mx-auto font-mono'>
      <Head>
        <title>Notion Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
     <main className="container w-full mt-16">
      <h1 className='text-5xl font-medium text-center mb-16'>Notion Blog</h1>
			<div className='sm:grid grid-cols-2 lg:w-5/6 mx-auto gap-3'>
      {postsByPage.map((post) => (
        <div key={post.id} >
          <SinglePost
            id = {post.id}
            title = {post.title}
            description = {post.description}
            date={post.date}
            tags={post.tags}
            slug={post.slug}
						isPaginationPage={true}
          />
        </div>
      ))}

			</div>
			<Pagination numberOfPage={numberOfPage} />

			<Tag tags={allTags} />
    </main>

    </div>
  )
}

export default BlogPageList;